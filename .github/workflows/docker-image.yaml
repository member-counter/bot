name: Docker Image CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [master]

jobs:
  pnpm-store-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=ghcr.io/member-counter/pnpm-store-cache:build-cache
          cache-to: type=registry,ref=ghcr.io/member-counter/pnpm-store-cache:build-cache,mode=max
          tags: |
            ghcr.io/member-counter/pnpm-store-cache:latest

  format-check:
    runs-on: ubuntu-latest
    needs: pnpm-store-cache
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check formatting
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            -w /workspace \
            ghcr.io/member-counter/pnpm-store-cache:latest \
            sh -c "
              pnpm install --frozen-lockfile --offline &&
              pnpm format
            "

  lint-check:
    runs-on: ubuntu-latest
    needs: pnpm-store-cache
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run linting
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            -w /workspace \
            ghcr.io/member-counter/pnpm-store-cache:latest \
            sh -c "
              pnpm install --frozen-lockfile --offline &&
              pnpm lint
            "

  typecheck:
    runs-on: ubuntu-latest
    needs: pnpm-store-cache
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run typecheck
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            -w /workspace \
            ghcr.io/member-counter/pnpm-store-cache:latest \
            sh -c "
              pnpm install --frozen-lockfile --offline &&
              pnpm typecheck
            "

  workspace-check:
    runs-on: ubuntu-latest
    needs: pnpm-store-cache
    timeout-minutes: 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check workspace dependencies
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            -w /workspace \
            ghcr.io/member-counter/pnpm-store-cache:latest \
            sh -c "
              pnpm install --frozen-lockfile --offline &&
              pnpm lint:ws
            "

  build-website:
    runs-on: ubuntu-latest
    needs:
      [pnpm-store-cache, format-check, lint-check, typecheck, workspace-check]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/website/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=ghcr.io/member-counter/website:build-cache
          cache-to: type=registry,ref=ghcr.io/member-counter/website:build-cache,mode=max
          tags: |
            ghcr.io/member-counter/website:latest
          build-args: |
            NEXT_PUBLIC_SUPPORT_URL=${{ vars.NEXT_PUBLIC_SUPPORT_URL }}
            NEXT_PUBLIC_BOT_DOCS_URL=${{ vars.NEXT_PUBLIC_BOT_DOCS_URL }}
            NEXT_PUBLIC_BOT_REPO_URL=${{ vars.NEXT_PUBLIC_BOT_REPO_URL }}
            NEXT_PUBLIC_TRANSLATION_PLATFORM_URL=${{ vars.NEXT_PUBLIC_TRANSLATION_PLATFORM_URL }}

  build-bot:
    runs-on: ubuntu-latest
    needs:
      [pnpm-store-cache, format-check, lint-check, typecheck, workspace-check]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/bot/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=ghcr.io/member-counter/bot:build-cache
          cache-to: type=registry,ref=ghcr.io/member-counter/bot:build-cache,mode=max
          tags: |
            ghcr.io/member-counter/bot:latest

  build-db-utils:
    runs-on: ubuntu-latest
    needs:
      [pnpm-store-cache, format-check, lint-check, typecheck, workspace-check]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: packages/db/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=ghcr.io/member-counter/db-utils:build-cache
          cache-to: type=registry,ref=ghcr.io/member-counter/db-utils:build-cache,mode=max
          tags: |
            ghcr.io/member-counter/db-utils:latest
